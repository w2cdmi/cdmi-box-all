<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"
    default-lazy-init="true"
>

    <description>Shiro</description>

    <!-- <bean id="ntlmManagerService" class="com.huawei.sharedrive.uam.user.service.impl.NtlmManagerServiceImpl" init-method="init"> <property name="zookeeperServer" ref="zookeeperServer" /> </bean> -->

    
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="sessionManager" ref="defaultWebSessionManager" />
        <property name="rememberMeManager" ref="rememberMeManager" />
        <property name="realm" ref="myAuthorizingRealm" />
    </bean>

    
    <bean id="myAuthorizingRealm" class="pw.cdmi.box.uam.user.shiro.MyAuthorizingRealm">
        <property name="cachingEnabled" value="false" />
    </bean>

    

    
    <bean id="myLogoutFilter" class="pw.cdmi.box.uam.user.shiro.MyLogoutAuthenticationFilter" />
    <bean id="myCaptchaFilter" class="pw.cdmi.box.uam.user.shiro.FormAuthenticationCaptchaFilter">
        <property name="refererMatchFilter" ref="refererMatchFilter" />
    </bean>
    <bean id="myUserFilter" class="pw.cdmi.box.uam.user.shiro.MyUserFilter" />

    
    <bean id="securityPermissionsFilter" class="pw.cdmi.box.uam.user.shiro.SecurityPermissionsAuthorizationFilter">
    </bean>

   

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/login" />
        <property name="successUrl" value="/" />
        <property name="filters">
            <map>
                <entry key="authc" value-ref="myCaptchaFilter" />
                <entry key="user" value-ref="myUserFilter" />
                <entry key="noSessionCreation" value-ref="securityPermissionsFilter" />
                <entry key="logout" value-ref="myLogoutFilter" />
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /login = authc
                /logout = logout
                /static/** = anon
                /checkRealServerHealth.28055dab3fc0a85271dddbeb0464bfdb = anon
                /syscommon/** = anon
                /api/** = noSessionCreation
                /register/** = anon
                /verifycode = anon
                /favicon.ico = anon
                /sso/ssocmb=anon
              
            	
				/sys/appmanage/** = user,roles[APP_MANAGER]
				/enterprise/adminstratorlog/** = user,roles[APP_MANAGER]
                /enterprise/manager/query = user,roles[APP_MANAGER]
                /app/list = user,roles[APP_MANAGER]
                /app/config = user,roles[APP_MANAGER]
                /app/mailServer = user,roles[APP_MANAGER]
                /app/authServer = user,roles[APP_MANAGER]
                /app/network = user,roles[APP_MANAGER]
                /app/user = user,roles[APP_MANAGER]
                /app/** = user,roles[APP_MANAGER]
                /admin/declaration/** = user,roles[APP_MANAGER]
                /statistics/** = user,roles[APP_MANAGER]   
                /statistics/** = user,roles[STATISTICS_MANAGER] 
                
                   
                /sys/sysconfig/syslog/** = user,roles[SYSTEM_CONFIG]
                /sys/sysconfig/statistics/** = user,roles[SYSTEM_CONFIG]
                /sys/sysconfig/access/** = user,roles[SYSTEM_CONFIG]
                /sys/sysconfig/enterprisemanage/** = user,roles[SYSTEM_CONFIG]
                /sys/sysconfig/loginconfig/** = user,roles[SYSTEM_CONFIG]
                
                
                /sys/systemlog/** = user,roles[ADMIN_MANAGER]
                /sys/loginAlam/** = user,roles[ADMIN_MANAGER]
                /sys/sysconfig/mailserver/** = user,roles[ADMIN_MANAGER]
                /sys/authorize/** = user,roles[ADMIN_MANAGER]
              
                
                /watermark/** = user,roles[ENTERPRISE_MANAGER]
                
			    /enterprise/manager/** = user,roles[ENTERPRISE_BUSINESS_MANAGER]
                /enterprise/account = user,roles[ENTERPRISE_BUSINESS_MANAGER]
                /enterprise/account/** = user,roles[ENTERPRISE_BUSINESS_MANAGER]
                /enterprise/admin/** = user,roles[ENTERPRISE_MANAGER]
                /enterprise/security/** = user,roles[ENTERPRISE_MANAGER]
                /job/** = user,roles[JOB_MANAGER]
                /feedback/uam/**=user,roles[FEEDBACK_MANAGER]
                /announcement/** = user,roles[ANNOUNCEMENT_MANAGER]
                /** = user
            </value>
            
        </property>
    </bean>

    
    <bean id="defaultWebSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="${session.expire}" />
        <property name="sessionDAO" ref="memCacheShiroSessionDAO" />
        <property name="sessionValidationSchedulerEnabled" value="false" />
        <property name="sessionIdCookie" ref="wapsession" />
    </bean>
    
    <bean id="sessionIdGenerator" class="pw.cdmi.core.utils.SecRandomSessionIdGenerator"/>

   
    <bean id="wapsession" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="WAPSESSIONID" />
        <property name="secure" value="false" />
    </bean>

    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie" />
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe" />
        <property name="secure" value="false" />
    </bean>

    
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    
    <bean id="cloudDriveIntegrationService" class="com.huawei.sharedrive.integration.CloudDriveIntegrationServiceImpl" />
</beans>