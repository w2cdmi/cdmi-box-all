/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Onebox.ThriftClient
{

  /// <summary>
  /// share link info
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class Share_Link_Info : TBase
  {
    private string _url;
    private string _accessCode;
    private long _effectAt;
    private long _expireAt;

    public string Url
    {
      get
      {
        return _url;
      }
      set
      {
        __isset.url = true;
        this._url = value;
      }
    }

    public string AccessCode
    {
      get
      {
        return _accessCode;
      }
      set
      {
        __isset.accessCode = true;
        this._accessCode = value;
      }
    }

    public long EffectAt
    {
      get
      {
        return _effectAt;
      }
      set
      {
        __isset.effectAt = true;
        this._effectAt = value;
      }
    }

    public long ExpireAt
    {
      get
      {
        return _expireAt;
      }
      set
      {
        __isset.expireAt = true;
        this._expireAt = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool url;
      public bool accessCode;
      public bool effectAt;
      public bool expireAt;
    }

    public Share_Link_Info() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              Url = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              AccessCode = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I64) {
              EffectAt = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I64) {
              ExpireAt = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("Share_Link_Info");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Url != null && __isset.url) {
        field.Name = "url";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Url);
        oprot.WriteFieldEnd();
      }
      if (AccessCode != null && __isset.accessCode) {
        field.Name = "accessCode";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(AccessCode);
        oprot.WriteFieldEnd();
      }
      if (__isset.effectAt) {
        field.Name = "effectAt";
        field.Type = TType.I64;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(EffectAt);
        oprot.WriteFieldEnd();
      }
      if (__isset.expireAt) {
        field.Name = "expireAt";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(ExpireAt);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("Share_Link_Info(");
      sb.Append("Url: ");
      sb.Append(Url);
      sb.Append(",AccessCode: ");
      sb.Append(AccessCode);
      sb.Append(",EffectAt: ");
      sb.Append(EffectAt);
      sb.Append(",ExpireAt: ");
      sb.Append(ExpireAt);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
