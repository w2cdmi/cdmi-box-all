<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="User">

	<!-- Use type aliases to avoid typing the full classname every time. -->
	<typeAlias alias="User" type="com.huawei.sharedrive.app.user.domain.User" />

	<select id="getUserByLoginNameAppId" parameterClass="map"
		resultClass="User">
    	<![CDATA[
        select * from user where loginName=#loginName# and appId=#appId#
        ]]>
	</select>
	
	<select id="getUserByLoginNameAccountId" parameterClass="map"
		resultClass="User">
    	<![CDATA[
        select * from user where loginName=#loginName# and accountId=#accountId#
        ]]>
	</select>
	
	<select id="getUserByObjectSid" parameterClass="String"
		resultClass="User">
        <![CDATA[
        select * from user where objectSid=#value#
        ]]>
	</select>
	<select id="getByStatus" resultClass="User" parameterClass="String">
        <![CDATA[
        select * from user where status=#status#
        ]]>
	</select>
	<select id="getFilterd" parameterClass="map" resultClass="User">
		select * from user
		<dynamic prepend="where">
			<isNotNull prepend="and" property="filter">
				type = #filter.type#
			</isNotNull>
		</dynamic>
		<dynamic prepend="and" open="(" close=")">
			<isNotEmpty prepend="or" property="filter.loginName">
				loginName like concat('%',#filter.loginName#,'%')
			</isNotEmpty>
			<isNotEmpty prepend="or" property="filter.name">
				name like concat('%',#filter.name#,'%')
			</isNotEmpty>
			<isNotEmpty prepend="or" property="filter.email">
				email like concat('%',#filter.email#,'%')
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="order by">
			<isNotNull property="order">
				<isNotEmpty property="order.field">
					$order.field$
					<isEqual property="order.desc" compareValue="true">
						desc
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		<dynamic prepend="limit">
			<isNotNull property="limit">
				#limit.offset#,#limit.length#
			</isNotNull>
		</dynamic>
	</select>

	<select id="getFilterdCount" parameterClass="map" resultClass="int">
		select count(id) from user
		<dynamic prepend="where">
			<isNotNull prepend="and" property="filter">
				type = #filter.type#
			</isNotNull>
		</dynamic>
		<dynamic prepend="and" open="(" close=")">
			<isNotEmpty prepend="or" property="filter.loginName">
				loginName like concat('%',#filter.loginName#,'%')
			</isNotEmpty>
			<isNotEmpty prepend="or" property="filter.name">
				name like concat('%',#filter.name#,'%')
			</isNotEmpty>
			<isNotEmpty prepend="or" property="filter.email">
				email like concat('%',#filter.email#,'%')
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="get" resultClass="User" parameterClass="long">
        <![CDATA[
        select * from user where id=#value#
        ]]>
	</select>

	<select id="getUserCountByAppId" parameterClass="String"
		resultClass="int">
		select count(*) from user where appId = #appId#
	</select>

	<select id="getOrderedUser" parameterClass="map" resultClass="User">
		select * from user
		<dynamic prepend="where">
			<isNotNull property="filter">
				<isNotEmpty prepend="and" property="filter.appId">
					appId = #filter.appId#
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		<dynamic prepend="order by ">
			<isNotNull property="orderBy">
				$orderBy$
			</isNotNull>
		</dynamic>
		<dynamic prepend="limit">
			#offset#, #limit#
		</dynamic>
	</select>

	<select id="getUsedCapacity" parameterClass="map" resultClass="User">
		select id,fileCount,spaceUsed from user
		<dynamic prepend="where">
			<isNotEmpty prepend="and" property="filter.appId">
				appId = #filter.appId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="numLimit1">
				(
				type = #numLimit1#
				<isNotEmpty prepend="or" property="numLimit2">
					type = #numLimit2#
				</isNotEmpty>
				)
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="countSpaceTotal" parameterClass="map"
		resultClass="long">
		select count(id) from user
		<dynamic prepend="where">
			<isNotEmpty prepend="and" property="filter.appId">
				appId = #filter.appId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="numLimit1">
				(
				type = #numLimit1#
				<isNotEmpty prepend="or" property="numLimit2">
					type = #numLimit2#
				</isNotEmpty>
				)
			</isNotEmpty>
		</dynamic>
	</select>

	<insert id="insert" parameterClass="User">
        <![CDATA[
        insert into user(id,objectSid,loginName,name,email,createdAt,modifiedAt,spaceUsed,status
        ,domain,spaceQuota,recycleDays,regionId,type,appId,maxVersions,accountId) 
        values 
        (#id#,#objectSid#,#loginName#,#name#
        ,#email#,#createdAt#,#modifiedAt#,#spaceUsed#,#status#,#domain#,#spaceQuota#,#recycleDays#,#regionId#,#type#,#appId#,#maxVersions#,#accountId#)
        ]]>
	</insert>

	<update id="update" parameterClass="User">
        <![CDATA[
        update user set objectSid=#objectSid#,name=#name#, loginName=#loginName#, 
        email=#email#, createdAt=#createdAt#, modifiedAt=#modifiedAt#, spaceUsed=#spaceUsed#, 
        status=#status#,domain=#domain#, spaceQuota=#spaceQuota#, recycleDays=#recycleDays#, regionId=#regionId#, maxVersions=#maxVersions#
        where id=#id#
        ]]>
	</update>

	<update id="updateStatus" parameterClass="User">
        <![CDATA[
        update user set status=#status#, modifiedAt=#modifiedAt# where id=#id#
        ]]>
	</update>

	<update id="updateRegion" parameterClass="User">
        <![CDATA[
        update user set regionId=#regionId#, modifiedAt=#modifiedAt# where id=#id#
        ]]>
	</update>

	<update id="updateLastLoginAt" parameterClass="User">
        <![CDATA[
        update user set lastLoginAt=#lastLoginAt# where id=#id#
        ]]>
	</update>

	<update id="sacle" parameterClass="User">
        <![CDATA[
        update user set spaceQuota=#spaceQuota#, modifiedAt=#modifiedAt# where id=#id#
        ]]>
	</update>

	<update id="updateStatisticInfo" parameterClass="User">
		update user
		<dynamic prepend="set">
			<isNotEmpty property="spaceUsed" prepend=",">
				spaceUsed=#spaceUsed#
			</isNotEmpty>
			<isNotEmpty property="fileCount" prepend=",">
				fileCount=#fileCount#
			</isNotEmpty>
			<isNotEmpty property="lastStatisticsTime" prepend=",">
				lastStatisticsTime=#lastStatisticsTime#
			</isNotEmpty>
		</dynamic>
		where id=#id#
	</update>

	<delete id="delete" parameterClass="long">
        <![CDATA[
        delete from user where id=#value#
        ]]>
	</delete>

	<select id="getMaxUserId" resultClass="Long">
        <![CDATA[
        select max(id) from user
        ]]>
	</select>

	<select id="getMaxVersions" resultClass="Int" parameterClass="Long">
        <![CDATA[
        select maxVersions from user where id=#id#
        ]]>
	</select>

</sqlMap>

